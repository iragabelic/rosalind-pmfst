##niz kmers punimo kmerima, range je duljina genoma - duljina kmera - 1
##jer tako osiguravamo da ne bude out of range. kroz j i k petlju uspoređujem
##kmere i ako su dva ista, povećavam brojač i dodajem u dictionary, a zatim
##resetiram brojač. u for val petlji provjeravam ima li više ključeva isti
##value i ako ima, ispisujem sve
def freq(a, b):
    kmers = []
    dic = {}
    counter = 0
    for i in range(len(a) - (b - 1)):
        kmers.append(a[i:i+b])
    for j in range(len(kmers)):
        for k in range(j+1):
            if(kmers[j] == kmers[k]):
                counter += 1
                dic.update({str(kmers[j]): counter})
        counter = 0
    for val in dic:
        max_key = max(dic, key=dic.get)
        if(dic[val] == dic[max_key]):
            print(val)

freq("TTTTGACATCTCCTATCACGATGGATCGTGCTTGATCGTGCTTGATACGATGGATCGTGCTTGATCGTGCTTGATCTCCTATCGAGCTTATCGTGCTTGATGAGCTTATCTCCTATCCTCCTATCCTCCTATCACGATGGATGAGCTTATTTTTGACATCGTGCTTGATCGTGCTTGATGAGCTTATACGATGGATCTCCTATCACGATGGATACGATGGATCTCCTATCTTTTGACATCGTGCTTGATTTTTGACATACGATGGATACGATGGATACGATGGATCGTGCTTGATACGATGGATCGTGCTTGATCTCCTATCCTCCTATCCGTGCTTGATGAGCTTATCTCCTATCTTTTGACATACGATGGATTTTTGACATACGATGGATTTTTGACATCGTGCTTGATCTCCTATCCTCCTATCCTCCTATCGAGCTTATCGTGCTTGATCTCCTATCACGATGGATACGATGGATCTCCTATCTTTTGACATACGATGGATACGATGGATACGATGGATTTTTGACATCTCCTATCACGATGGATTTTTGACATCGTGCTTGATGAGCTTATCGTGCTTGATACGATGGATCTCCTATCTTTTGACATCTCCTATCTTTTGACATCGTGCTTGATGAGCTTATCGTGCTTGATACGATGGATTTTTGACATACGATGGATCGTGCTTGATCTCCTATCCTCCTATCACGATGGATACGATGGATTTTTGACATTTTTGACATCTCCTATCTTTTGACATGAGCTTATTTTTGACATTTTTGACATACGATGGATTTTTGACATACGATGGATGAGCTTATGAGCTTATCGTGCTTGATCTCCTATCCGTGCTTGATTTTTGACATGAGCTTATGAGCTTATACGATGGATCTCCTATCTTTTGACAT", 14)
        
        
